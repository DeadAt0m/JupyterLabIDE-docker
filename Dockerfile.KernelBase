ARG CUDA_VERSION
ARG CUDNN_VERSION

FROM nvidia/cuda:${CUDA_VERSION}-cudnn${CUDNN_VERSION}-devel-ubuntu18.04
MAINTAINER "DeadAt0m <kheldi@yandex.ru>"

ARG MINICONDA_VERSION
ARG USER_NAME
ARG USER_PASSWORD
ARG TIMEZONE
ARG MINICONDA_MD5_HASH

USER root
ENV MINICONDA_VERSION=$MINICONDA_VERSION \
    TZ=$TIMEZONE \
    MINICONDA_MD5_HASH=$MINICONDA_MD5_HASH 
ENV DEBIAN_FRONTEND noninteractive

RUN mkdir -p /etc/apt/apt.conf.d/
COPY ./resources/99fixbadproxy /etc/apt/apt.conf.d/

#install tzdata and locale
RUN apt-get update && apt-get install -yq  --no-install-recommends tzdata locales && \
    echo "en_US.UTF-8 UTF-8" > /etc/locale.gen &&  locale-gen && \
    ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone && \ 
    dpkg-reconfigure --frontend noninteractive tzdata

# Install all OS dependencies for notebook server that starts but lacks all
# features (e.g., download as all possible file formats)
RUN apt-get update && apt-get install -y --allow-downgrades \
    wget \
    bzip2 \
    sudo \
    fonts-liberation \
    htop \
    build-essential \
    git \
    inkscape \
    jed \
    libsm6 \
    libxext-dev \
    libxrender1 \
    lmodern \
    netcat \
    pandoc \
    texlive-fonts-extra \
    texlive-fonts-recommended \
    texlive-generic-recommended \
    texlive-latex-base \
    texlive-latex-extra \
    texlive-xetex \
    unzip \
    nano \
    zsh \ 
    fonts-powerline \
    docker.io \
    ant \
    bc \
    cmake \
    curl \
    default-jdk \
    doxygen \
    g++ \
    gfortran \
    freeglut3-dev \
    fonts-dejavu \
    libgmp-dev \ 
    libmagic-dev \
    libcairo2-dev \ 
    libpango1.0-dev \ 
    libtinfo-dev \
    ffmpeg \
    libavcodec-dev \
    libavformat-dev \
    libcupti-dev \
    libffi-dev \
    libfreetype6-dev \
    libhdf5-dev \
    libjpeg-dev \
    liblcms2-dev \
    libopenblas-dev \
    liblapack-dev \
    libssl1.0-dev \
    libwebp-dev \
    libzmq3-dev \
    libjpeg-dev \
    libwebp-dev \
    libpng-dev \
    libtiff5-dev \
    libopencore-amrnb-dev \
    libpng-dev \
    libv4l-dev \
    libxine2-dev \
    libtbb-dev \
    libeigen3-dev \
    libopenexr-dev \
    libdc1394-22-dev \
    libswscale-dev \
    libtheora-dev \
    libvorbis-dev \
    libxvidcore-dev \
    libx264-dev \
    node-gyp \
    nodejs-dev \
    nodejs \
    npm \
    pkg-config \
    rsync \
    python3-dev \
    python3-tk \
    python3-numpy \
    qt5-default \
    software-properties-common \
    swig3.0 \
    vim \
    vim-gnome \ 
    ctags \
    cscope \
    zlib1g-dev \
    yasm \
    xorg \
    xorg-dev \
    xvfb \
    x11vnc \
    x11-xkb-utils \
    xfonts-100dpi \
    xfonts-75dpi \
    xfonts-scalable \
    xfonts-cyrillic


# Configure environment
ENV CONDA_DIR=/opt/conda \
    SHELL=/bin/zsh \
    NB_USER=$USER_NAME \
    NB_UID=1000 \
    NB_GID=100 \
    LC_ALL=en_US.UTF-8 \
    LANG=en_US.UTF-8 \
    LANGUAGE=en_US.UTF-8
ENV PATH=$CONDA_DIR/bin:$PATH \
    HOME=/home/$NB_USER


# Create  user with UID=1000 and in the 'users' group
# and make sure these dirs are writable by the `users` group.
ADD ./resources/fix-permissions /usr/local/bin/fix-permissions
RUN useradd -m -s /bin/bash -N -u $NB_UID $NB_USER && \
    mkdir -p $CONDA_DIR && \
    chown $NB_USER:$NB_GID $CONDA_DIR && \
    fix-permissions $HOME && \
    fix-permissions $CONDA_DIR && \
    echo "$NB_USER:$USER_PASSWORD" | chpasswd && \
    adduser $NB_USER sudo
ENV PATH="/home/${NB_USER}/.local/bin:${PATH}"


# Configure xvfb and swig
ENV DISPLAY :1
ADD ./resources/xvfb /usr/bin/xvfb
RUN chmod a+x /usr/bin/xvfb
RUN ln -s /usr/bin/swig3.0 /usr/bin/swig


# Configure container startup
EXPOSE 8888
WORKDIR $HOME
CMD ["start-notebook.sh"]

# Add local files as late as possible to avoid cache busting
COPY ./resources/start.sh /usr/local/bin/
COPY ./resources/start-notebook.sh /usr/local/bin/
COPY ./resources/start-singleuser.sh /usr/local/bin/
COPY ./resources/nvidiadockerstats /bin/nvidiadockerstats

USER $NB_USER

# Setup work directory for backward-compatibility
RUN mkdir /home/$NB_USER/home && \
    fix-permissions /home/$NB_USER

# Install conda as amplifier and check the md5 sum provided on the download site
RUN cd /tmp && \
    wget --quiet https://repo.continuum.io/miniconda/Miniconda3-${MINICONDA_VERSION}-Linux-x86_64.sh && \
    echo "${MINICONDA_MD5_HASH} *Miniconda3-${MINICONDA_VERSION}-Linux-x86_64.sh" | md5sum -c - && \
    /bin/bash Miniconda3-${MINICONDA_VERSION}-Linux-x86_64.sh -f -b -p $CONDA_DIR && \
    rm Miniconda3-${MINICONDA_VERSION}-Linux-x86_64.sh && \
    $CONDA_DIR/bin/conda config --system --prepend channels conda-forge && \
    $CONDA_DIR/bin/conda config --system --set auto_update_conda false && \
    $CONDA_DIR/bin/conda config --system --set show_channel_urls true && \
    $CONDA_DIR/bin/conda update --all --quiet --yes && \
    conda clean -tipsy && \
    rm -rf /home/$NB_USER/.cache/yarn 

RUN  wget https://github.com/robbyrussell/oh-my-zsh/raw/master/tools/install.sh -O - | zsh || true && git clone https://github.com/powerline/fonts.git --depth=1 && cd fonts && ./install.sh && cd .. && rm -rf fonts

